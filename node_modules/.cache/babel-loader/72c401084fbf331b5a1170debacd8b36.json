{"ast":null,"code":"var _jsxFileName = \"/Users/ouz/Documents/React/max_course/projects/reactListKeys/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport Char from \"./Char\";\nimport Validation from \"./Validation\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      textLength: 0,\n      txtArray: []\n    };\n\n    this.textOperations = event => {\n      let length = 0;\n      const valueTxt = event.target.value;\n      length = valueTxt.length;\n      const valueArr = valueTxt.split('');\n      this.setState({\n        textLength: length,\n        txtArray: valueArr\n      });\n    };\n\n    this.deleteOperations = (event, index) => {};\n  }\n\n  render() {\n    let charList = this.state.txtArray.map((ch, index) => {\n      return /*#__PURE__*/_jsxDEV(Char, {\n        letter: ch\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 18\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Please input a text :\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            onChange: event => this.textOperations(event)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Validation, {\n        txtLength: this.state.textLength\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), charList]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/ouz/Documents/React/max_course/projects/reactListKeys/src/App.js"],"names":["React","Component","Char","Validation","App","state","textLength","txtArray","textOperations","event","length","valueTxt","target","value","valueArr","split","setState","deleteOperations","index","render","charList","map","ch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;AAEA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BI,KAD0B,GAClB;AACNC,MAAAA,UAAU,EAAE,CADN;AAENC,MAAAA,QAAQ,EAAE;AAFJ,KADkB;;AAAA,SAM1BC,cAN0B,GAMRC,KAAD,IAAW;AAE1B,UAAIC,MAAM,GAAG,CAAb;AACA,YAAMC,QAAQ,GAAGF,KAAK,CAACG,MAAN,CAAaC,KAA9B;AAEAH,MAAAA,MAAM,GAAGC,QAAQ,CAACD,MAAlB;AAEA,YAAMI,QAAQ,GAAGH,QAAQ,CAACI,KAAT,CAAe,EAAf,CAAjB;AAEA,WAAKC,QAAL,CAAc;AACZV,QAAAA,UAAU,EAAEI,MADA;AAEZH,QAAAA,QAAQ,EAAEO;AAFE,OAAd;AAID,KAnByB;;AAAA,SAqB1BG,gBArB0B,GAqBP,CAACR,KAAD,EAAQS,KAAR,KAAkB,CAEpC,CAvByB;AAAA;;AAyB1BC,EAAAA,MAAM,GAAG;AACP,QAAIC,QAAQ,GAAG,KAAKf,KAAL,CAAWE,QAAX,CAAoBc,GAApB,CAAwB,CAACC,EAAD,EAAKJ,KAAL,KAAe;AAChD,0BAAO,QAAC,IAAD;AAAM,QAAA,MAAM,EAAEI;AAAd,SAAuBJ,KAAvB;AAAA;AAAA;AAAA;AAAA,cAAP;AACL,KAFc,CAAf;AAIA,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE;AAAA,+BACE;AAAA,2DAEE;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,QAAQ,EAAGT,KAAD,IAAW,KAAKD,cAAL,CAAoBC,KAApB;AAFvB;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAUE,QAAC,UAAD;AAAY,QAAA,SAAS,EAAE,KAAKJ,KAAL,CAAWC;AAAlC;AAAA;AAAA;AAAA;AAAA,cAVF,EAWGc,QAXH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAeD;;AA7CyB;;AAgD5B,eAAehB,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Char from \"./Char\";\nimport Validation from \"./Validation\";\n\nclass App extends Component {\n  state = {\n    textLength: 0,\n    txtArray: []\n  };\n\n  textOperations = (event) => {\n\n    let length = 0;\n    const valueTxt = event.target.value;\n\n    length = valueTxt.length;\n\n    const valueArr = valueTxt.split('');\n\n    this.setState({\n      textLength: length,\n      txtArray: valueArr\n    });\n  }\n\n  deleteOperations = (event, index) => {\n\n  }\n\n  render() {\n    let charList = this.state.txtArray.map((ch, index) => {\n          return <Char letter={ch} key={index} />\n    });\n\n    return (\n      <div className=\"App\">\n        <div>\n          <label>\n            Please input a text :\n            <input\n              type=\"text\"\n              onChange={(event) => this.textOperations(event)}\n            />\n          </label>\n        </div>\n        <Validation txtLength={this.state.textLength} />\n        {charList}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}